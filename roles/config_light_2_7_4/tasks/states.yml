---
- name: "States: Debug cl_debug={{ cl_debug }}"
  when: cl_debug | bool
  ansible.builtin.debug:
    msg: "{{ cl_states }}"

- name: "States: Apply unmount states."
  when: item.value.state | d('absent') in cl_states_unmount
  ansible.posix.mount:
    path: "{{ item.value.path }}"
    state: "{{ item.value.state | d('absent') }}"
    backup: "{{ item.value.backup | d(omit) }}"
    boot: "{{ item.value.boot | d(omit) }}"
    dump: "{{ item.value.dump | d(omit) }}"
    fstab: "{{ item.value.fstab | d(omit) }}"
    opts: "{{ item.value.opts | d(omit) }}"
    passno: "{{ item.value.passno | d(omit) }}"
    src: "{{ item.value.src | d(omit) }}"
  loop: "{{ cl_states | dict2items }}"
  loop_control:
    label: "{{ item.value.path }}"

- name: "States: Apply file states."
  when: item.value.state | d('file') in cl_states_file
  ansible.builtin.file:
    path: "{{ item.value.path }}"
    state: "{{ item.value.state | d(omit) }}"
    src: "{{ item.value.src | d(omit) }}"
    owner: "{{ item.value.owner | d(omit) }}"
    group: "{{ item.value.group | d(omit) }}"
    mode: "{{ item.value.mode | d(omit) }}"
    attributes: "{{ item.value.attributes | d(omit) }}"
    recurse: "{{ item.value.recurse | d(omit) }}"
    force: "{{ item.value.force | d(omit) }}"
    follow: "{{ item.value.follow | d(omit) }}"
    access_time: "{{ item.value.access_time | d(omit) }}"
    access_time_format: "{{ item.value.access_time_format | d(omit) }}"
    modification_time: "{{ item.value.modification_time | d(omit) }}"
    modification_time_format: "{{ item.value.modification_time_format | d(omit) }}"
    unsafe_writes: "{{ item.value.unsafe_writes | d(omit) }}"
  loop: "{{ cl_states | dict2items }}"
  loop_control:
    label: "{{ item.value.path }}"

- name: "States: Apply mount states."
  when: item.value.state | d('absent') in cl_states_mount
  ansible.posix.mount:
    path: "{{ item.value.path }}"
    state: "{{ item.value.state }}"
    backup: "{{ item.value.backup | d(omit) }}"
    boot: "{{ item.value.boot | d(omit) }}"
    dump: "{{ item.value.dump | d(omit) }}"
    fstab: "{{ item.value.fstab | d(omit) }}"
    opts: "{{ item.value.opts | d(omit) }}"
    passno: "{{ item.value.passno | d(omit) }}"
    src: "{{ item.value.src | d(omit) }}"
  loop: "{{ cl_states | dict2items }}"
  loop_control:
    label: "{{ item.value.path }}"

# EOF
