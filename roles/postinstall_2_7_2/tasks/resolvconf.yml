---
  # resolv.conf
- name: "Resolvconf: Absent lines in {{ fp_resolv_conf_file }}"
  tags: fp_resolv_conf_absent
  ansible.builtin.lineinfile:
    create: true
    state: absent
    dest: "{{ fp_resolv_conf_file }}"
    owner: "{{ fp_resolv_conf_owner }}"
    group: "{{ fp_resolv_conf_group }}"
    mode: "{{ fp_resolv_conf_mode }}"
    regexp: ^\s*{{ item }}\s*$
    backup: "{{ fp_backup }}"
  loop: "{{ fp_resolv_conf_absent }}"

- name: "Resolvconf: Present lines in {{ fp_resolv_conf_file }}"
  tags: fp_resolv_conf
  ansible.builtin.lineinfile:
    create: true
    dest: "{{ fp_resolv_conf_file }}"
    owner: "{{ fp_resolv_conf_owner }}"
    group: "{{ fp_resolv_conf_group }}"
    mode: "{{ fp_resolv_conf_mode }}"
    regexp: ^\s*{{ item.key }}(.*)$
    line: "{{ item.key }} {{ item.value }}"
    backup: "{{ fp_backup }}"
  loop: "{{ fp_resolv_conf }}"

  # resolvconf.conf
- name: "Resolvconf: Absent lines in {{ fp_resolvconf_conf_file }}"
  tags: fp_resolvconf_conf_absent
  notify: resolvconf apply
  ansible.builtin.lineinfile:
    create: true
    state: absent
    dest: "{{ fp_resolvconf_conf_file }}"
    owner: "{{ fp_resolvconf_conf_owner }}"
    group: "{{ fp_resolvconf_conf_group }}"
    mode: "{{ fp_resolvconf_conf_mode }}"
    regexp: ^\s*{{ item }}\s*$
    backup: "{{ fp_backup }}"
  loop: "{{ fp_resolvconf_conf_absent }}"

- name: "Resolvconf: Present lines in {{ fp_resolvconf_conf_file }}"
  tags: fp_resolvconf_conf
  notify: resolvconf apply
  ansible.builtin.lineinfile:
    create: true
    dest: "{{ fp_resolvconf_conf_file }}"
    owner: "{{ fp_resolvconf_conf_owner }}"
    group: "{{ fp_resolvconf_conf_group }}"
    mode: "{{ fp_resolvconf_conf_mode }}"
    regexp: ^\s*{{ item.key }}\s*=(.*)$
    line: '{{ item.key }}="{{ item.value }}"'
    backup: "{{ fp_backup }}"
  loop: "{{ fp_resolvconf_conf }}"

# EOF
