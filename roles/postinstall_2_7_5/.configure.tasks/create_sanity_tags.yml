- name: "Find tasks files"
  ansible.builtin.find:
    path: tasks
    recurse: true
    patterns: '*.yml'
  register: out
  check_mode: false

- name: "Create list of tasks"
  ansible.builtin.set_fact:
    _tasks: "{{ _tasks + lookup('file', item) | from_yaml_all }}"
  loop: "{{ out.files | map(attribute='path') }}"
  vars:
    _tasks: []

- name: "Debug list of tasks debug={{ debug | d(false) }}"
  ansible.builtin.debug:
    msg: |
      {{ _tasks | to_yaml(indent=2) | indent(2) }}
  when: debug | d(false) | bool

- name: "Debug lists of tags debug={{ debug | d(false) }}" # noqa: jinja[invalid]
  ansible.builtin.debug:
    msg: |
      _tags_tasks: {{ _tags_tasks | to_yaml(indent=2) | indent(2) }}"
      _tags_block: {{ _tags_block | to_yaml(indent=2) | indent(2) }}"
  vars:
    _tags_tasks: "{{ _tasks | json_query('[].tags') | flatten | unique | sort }}"
    _tags_block: "{{ _tasks | json_query('[].block[].tags') | flatten | unique | sort }}"
  when: debug | d(false) | bool

- name: "Create list of tags" # noqa: jinja[invalid]
  ansible.builtin.set_fact:
    _tags: "{{ (_tags_tasks + _tags_block + ['all']) |
               difference(['always', 'never']) |
               unique | sort }}"
  loop: "{{ out.files | map(attribute='path') }}"
  vars:
    _tags_tasks: "{{ _tasks | json_query('[].tags') | flatten | unique | sort }}"
    _tags_block: "{{ _tasks | json_query('[].block[].tags') | flatten | unique | sort }}"

- name: "Debug list of tags debug={{ debug | d(false) }}"
  ansible.builtin.debug:
    msg: |
      no_of_tags: {{ _tags | length }}
      _tags: {{ _tags | to_yaml(indent=2) | indent(2) }}
  when: debug | d(false) | bool

- name: "Create {{ tags_path }}"
  ansible.builtin.copy:
    dest: "{{ tags_path }}"
    mode: "0664"
    backup: true
    content: |
      ---
      # Generated by .configure.yml

      fp_sanity_tags:
        {{ _tags | to_nice_yaml(indent=2) | indent(2) }}
