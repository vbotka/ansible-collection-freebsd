---
- name: Configure public keys.
  vars:
    _act_user: "{{ item.value.act_user | d(act_user) }}"
    _act_pk_dir_default: "{{ lookup('env', 'PWD') }}/files"
    _act_pk_dir: "{{ act_pk_dir | d(_act_pk_dir_default) }}"
    _act_pk_path: "{{ _act_pk_dir }}/{{ item.value.act_pk | d(act_pk) }}"
    _act_pk: "{{ lookup('file', _act_pk_path) }}"
  block:

    # TODO: This test fails if there are more keys in the file.
    - name: "Pk: The keys is valid."
      vars:
        keys: "{{ fp_authorized_key_conf | map(attribute='key')
                                         | map('regex_search', fp_authorized_key_valid_regex) }}"
      ansible.builtin.assert:
        that: _act_pk | regex_search(act_key_valid_regex |
                                     d('^ssh-rsa\s+[A-Za-z0-9+/]+[=]{0,3}(\s+.+)?\s*$'))
        fail_msg: >
          [ERR] Invalid key.

    - name: "Pk: Configure public keys."
      register: out
      ansible.posix.authorized_key:
        user: "{{ _act_user }}"
        path: "{{ freebsd_iocage_mount }}/jails/{{ item.key }}/root/home/{{ _act_user }}/.ssh/authorized_keys"
        key: "{{ _act_pk }}"
        exclusive: true
      loop: "{{ templates | dict2items }}"
      loop_control:
        label: "{{ item.key }} {{ _act_user }}"

    - name: "Pk: Debug configure public keys debug2={{ debug2 }}"
      when: debug2 | bool
      ansible.builtin.debug:
        var: out

    - name: "Pk: Chown .ssh"
      register: out
      changed_when: false
      vbotka.freebsd.iocage:
        state: exec
        name: "{{ item.key }}"
        cmd: "chown -R {{ _act_user }}:{{ _act_user }} /home/{{ _act_user }}/.ssh"
      loop: "{{ templates | dict2items }}"
      loop_control:
        label: "{{ item.key }} {{ _act_user }}"

    - name: "Pk: Debug chown .ssh debug2={{ debug2 }}"
      when: debug2 | bool
      ansible.builtin.debug:
        var: out
