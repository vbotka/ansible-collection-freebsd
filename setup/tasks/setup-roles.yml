---

- name: "Create roles directories."
  tags: roles_dirs
  ansible.builtin.file:
    path: "{{ collection_dir }}/roles/{{ item.name }}_{{ item.version | replace('.', '_') }}"
    mode: "{{ roles_dir_mode }}"
    state: directory
  loop: "{{ roles | selectattr('name', 'in', roles_install)
                  | selectattr('scm', 'eq', 'git') }}"
  loop_control:
    label: "{{ item.name }} {{ item.galaxy }} {{ item.version }}"

- name: "Install roles."
  tags: roles_install
  register: result
  failed_when: result.rc | d(0) not in [0, 128]
  ansible.builtin.git:
    dest: "{{ collection_dir }}/roles/{{ item.name }}_{{ item.version | replace('.', '_') }}"
    repo: "{{ item.src }}"
    version: "{{ item.version }}"
    single_branch: true
    verify_commit: true
  loop: "{{ roles | selectattr('name', 'in', roles_install)
                  | selectattr('scm', 'eq', 'git') }}"
  loop_control:
    label: "{{ item.name }} {{ item.galaxy }} {{ item.version }}"

- name: "Debug result debug2={{ debug2 }}"
  when: debug2 | bool
  tags: roles_install
  ansible.builtin.debug:
    var: result

- name: "Link roles directories."
  tags: roles_links
  ansible.builtin.file:
    src: "{{ item.name }}_{{ item.version | replace('.', '_') }}"
    dest: "../roles/{{ item.name }}"
    state: link
    force: true
  loop: "{{ roles | selectattr('name', 'in', roles_install)
                  | selectattr('scm', 'eq', 'git') }}"
  loop_control:
    label: "{{ item.name }} {{ item.version }}"

- name: "Clean roles."
  when: clean_role_files_enable | bool
  tags: roles_clean
  ansible.builtin.file:
    state: absent
    dest: "{{ collection_dir }}/roles/{{ item.0 }}/{{ item.1 }}"
  loop: "{{ result.results | d([])
                           | selectattr('changed')
                           | map(attribute='item.name')
                           | product(clean_role_files) }}"
  loop_control:
    label: "{{ item.0 }}/{{ item.1 }}"

# EOF
