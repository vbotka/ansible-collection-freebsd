
PLAY [Create SSL certificate.] *************************************************

TASK [Gathering Facts] *********************************************************
ok: [www-3]

TASK [Vars: Include OS vars] ***************************************************
included: vbotka.freebsd.lib for www-3

TASK [vbotka.freebsd.lib : Al_include_os_vars_path_incr: vars from /scratch/collections/ansible_collections/vbotka/freebsd/roles/certificate/vars/defaults] ***
ok: [www-3] => (item=/scratch/collections/ansible_collections/vbotka/freebsd/roles/certificate/vars/defaults/default.yml)
ok: [www-3] => (item=/scratch/collections/ansible_collections/vbotka/freebsd/roles/certificate/vars/defaults/FreeBSD.yml)

TASK [vbotka.freebsd.lib : Al_include_os_vars_path_incr: vars from /scratch/collections/ansible_collections/vbotka/freebsd/roles/certificate/vars] ***
ok: [www-3] => (item=/scratch/collections/ansible_collections/vbotka/freebsd/roles/certificate/vars/defaults.yml)

TASK [vbotka.freebsd.certificate : Vars: Add certificate_data_simple to certificate_data] ***
ok: [www-3]

TASK [vbotka.freebsd.certificate : Packages: Install FreeBSD packages] *********
ok: [www-3] => (item=security/py-cryptography)
ok: [www-3] => (item=security/py-openssl)
ok: [www-3] => (item=security/py-acme)
ok: [www-3] => (item=security/py-acme-tiny)

TASK [vbotka.freebsd.certificate : Cert-dirs: Create public directories /usr/local/etc/ssl] ***
ok: [www-3] => (item=/usr/local/etc/ssl)
ok: [www-3] => (item=/usr/local/etc/ssl/certs)
ok: [www-3] => (item=/usr/local/etc/ssl/csr)

TASK [vbotka.freebsd.certificate : Cert-dirs: Create /usr/local/etc/ssl/private] ***
ok: [www-3]

TASK [vbotka.freebsd.certificate : Sanity: Get meta-data.] *********************
ok: [www-3]

TASK [vbotka.freebsd.certificate : Sanity: Get role_name.] *********************
ok: [www-3]

TASK [Sanity: Include al_sanity_platform from lib] *****************************
included: vbotka.freebsd.lib for www-3

TASK [vbotka.freebsd.lib : Al_sanity_platform: Setup. Collect minimal subset.] ***
ok: [www-3]

TASK [vbotka.freebsd.lib : Al_sanity_platform: Get supported platforms.] *******
ok: [www-3]

TASK [vbotka.freebsd.lib : Al_sanity_platform: Get supported versions of FreeBSD.] ***
ok: [www-3]

TASK [vbotka.freebsd.lib : Al_sanity_platform: Set test variables.] ************
included: /scratch/collections/ansible_collections/vbotka/freebsd/roles/lib/tasks/fn/al_include_sanity_platform_test_vars.yml for www-3

TASK [vbotka.freebsd.lib : Al_include_sanity_platform_test_vars: Set al_sanity_platform_test] ***
ok: [www-3]

TASK [vbotka.freebsd.lib : Al_include_sanity_platform_test_vars: Set al_sanity_platform_version_test] ***
ok: [www-3]

TASK [vbotka.freebsd.lib : Al_include_sanity_platform_test_vars: Set al_sanity_platform_version_test] ***
ok: [www-3]

TASK [Sanity: Include al_sanity_ansible_version from lib] **********************
included: vbotka.freebsd.lib for www-3

TASK [vbotka.freebsd.lib : Al_sanity_ansible_version: Get Ansible minimal version.] ***
ok: [www-3]

TASK [Sanity: Include al_sanity_packages from lib] *****************************
included: vbotka.freebsd.lib for www-3

TASK [vbotka.freebsd.lib : Al_sanity_packages: Setup. Gather minimal subset.] ***
ok: [www-3]

TASK [vbotka.freebsd.lib : Al_sanity_packages: Collect installed packages.] ****
ok: [www-3]

TASK [vbotka.freebsd.lib : Al_sanity_packages: Set list of installed packages.] ***
ok: [www-3]

PLAY RECAP *********************************************************************
www-3                      : ok=24   changed=0    unreachable=0    failed=0    skipped=37   rescued=0    ignored=0   

